{"version":3,"sources":["pages/Ui/Button/index.js"],"names":["ButtonPage","state","size","loadings","handleSizeChange","e","setState","target","value","enterLoading","index","newLoadings","setTimeout","handleMenuClick","console","log","this","menu","onClick","Item","key","className","gutter","span","title","type","Group","onChange","Button","icon","shape","loading","ghost","block","disabled","danger","overlay","React","Component"],"mappings":"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","file":"static/js/14.f7d116e4.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Button, Row, Col, Tooltip, Radio, Menu, Dropdown } from \"antd\";\nimport { SearchOutlined, DownloadOutlined, PoweroffOutlined, DownOutlined } from \"@ant-design/icons\";\nimport \"./style.less\";\n\nexport default class ButtonPage extends React.Component {\n  state = {\n    size: \"large\",\n    loadings: [],\n  };\n\n  handleSizeChange = (e) => {\n    this.setState({ size: e.target.value });\n  };\n\n  enterLoading = (index) => {\n    const newLoadings = [...this.state.loadings];\n    newLoadings[index] = true;\n    this.setState({\n      loadings: newLoadings,\n    });\n    setTimeout(() => {\n      newLoadings[index] = false;\n      this.setState({ loadings: newLoadings });\n    }, 6000);\n  };\n\n  handleMenuClick = (e) => {\n    console.log(\"click\", e);\n  };\n\n  render() {\n    const { size, loadings } = this.state;\n    const menu = (\n      <Menu onClick={this.handleMenuClick}>\n        <Menu.Item key=\"1\">1st item</Menu.Item>\n        <Menu.Item key=\"2\">2nd item</Menu.Item>\n        <Menu.Item key=\"3\">3rd item</Menu.Item>\n      </Menu>\n    );\n    return (\n      <div className=\"button-page\">\n        <Row gutter={20}>\n          <Col span={12}>\n            <Card title=\"按钮类型\">\n              <p>按钮有四种类型：主按钮、次按钮、虚线按钮和链接按钮。主按钮在同一个操作区域最多出现一次。</p>\n              <Button type=\"primary\">Primary</Button>\n              <Button>Default</Button>\n              <Button type=\"dashed\">Dashed</Button>\n              <Button type=\"link\">Link</Button>\n            </Card>\n\n            <Card title=\"按钮尺寸\">\n              <p>按钮有大、中、小三种尺寸。</p>\n              <p>通过设置 size 为 large small 分别把按钮设为大、小尺寸。若不设置 size，则尺寸为中。</p>\n              <Radio.Group value={size} onChange={this.handleSizeChange}>\n                <Radio.Button value=\"large\">Large</Radio.Button>\n                <Radio.Button value=\"default\">Default</Radio.Button>\n                <Radio.Button value=\"small\">Small</Radio.Button>\n              </Radio.Group>\n              <br />\n              <br />\n              <Button type=\"primary\" size={size}>\n                Primary\n              </Button>\n              <Button size={size}>Default</Button>\n              <Button type=\"dashed\" size={size}>\n                Dashed\n              </Button>\n              <br />\n              <Button type=\"link\" size={size}>\n                Link\n              </Button>\n              <br />\n              <Button type=\"primary\" icon={<DownloadOutlined />} size={size} />\n              <Button type=\"primary\" shape=\"circle\" icon={<DownloadOutlined />} size={size} />\n              <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} size={size} />\n              <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} size={size}>\n                Download\n              </Button>\n              <Button type=\"primary\" icon={<DownloadOutlined />} size={size}>\n                Download\n              </Button>\n            </Card>\n\n            <Card title=\"加载中状态\">\n              <p>添加 loading 属性即可让按钮处于加载状态，最后两个按钮演示点击后进入加载状态。</p>\n              <Button type=\"primary\" loading>\n                Loading\n              </Button>\n              <Button type=\"primary\" size=\"small\" loading>\n                Loading\n              </Button>\n              <Button type=\"primary\" icon={<PoweroffOutlined />} loading />\n              <br />\n              <Button type=\"primary\" loading={loadings[0]} onClick={() => this.enterLoading(0)}>\n                Click me!\n              </Button>\n              <Button\n                type=\"primary\"\n                icon={<PoweroffOutlined />}\n                loading={loadings[1]}\n                onClick={() => this.enterLoading(1)}\n              >\n                Click me!\n              </Button>\n              <Button\n                type=\"primary\"\n                icon={<PoweroffOutlined />}\n                loading={loadings[2]}\n                onClick={() => this.enterLoading(2)}\n              />\n            </Card>\n\n            <Card title=\"幽灵按钮\">\n              <p>幽灵按钮将按钮的内容反色，背景变为透明，常用在有色背景上。</p>\n              <div className=\"site-button-ghost-wrapper\">\n                <Button type=\"primary\" ghost>\n                  Primary\n                </Button>\n                <Button ghost>Default</Button>\n                <Button type=\"dashed\" ghost>\n                  link\n                </Button>\n                <Button type=\"link\" ghost>\n                  link\n                </Button>\n              </div>\n            </Card>\n\n            <Card title=\"Block 按钮\">\n              <p>block属性将使按钮适合其父宽度。</p>\n              <Button type=\"primary\" block>\n                Primary\n              </Button>\n              <Button block>Default</Button>\n              <Button type=\"dashed\" block>\n                Dashed\n              </Button>\n              <Button type=\"link\" block>\n                Link\n              </Button>\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card title=\"图标按钮\">\n              <p>\n                当需要在 Button 内嵌入 Icon 时，可以设置 icon 属性，或者直接在 Button 内使用 Icon 组件。 如果想控制 Icon\n                具体的位置，只能直接使用 Icon 组件，而非 icon 属性。\n              </p>\n              <Tooltip title=\"search\">\n                <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\n              </Tooltip>\n              <Button type=\"primary\" shape=\"circle\">\n                A\n              </Button>\n              <Button type=\"primary\" icon={<SearchOutlined />}>\n                Search\n              </Button>\n              <Tooltip title=\"search\">\n                <Button shape=\"circle\" icon={<SearchOutlined />} />\n              </Tooltip>\n              <Button icon={<SearchOutlined />}>Search</Button>\n              <br />\n              <Tooltip title=\"search\">\n                <Button shape=\"circle\" icon={<SearchOutlined />} />\n              </Tooltip>\n              <Button icon={<SearchOutlined />}>Search</Button>\n              <Tooltip title=\"search\">\n                <Button type=\"dashed\" shape=\"circle\" icon={<SearchOutlined />} />\n              </Tooltip>\n              <Button type=\"dashed\" icon={<SearchOutlined />}>\n                Search\n              </Button>\n            </Card>\n\n            <Card title=\"不可用状态\">\n              <p>添加 disabled 属性即可让按钮处于不可用状态，同时按钮样式也会改变。</p>\n              <Button type=\"primary\">Primary</Button>\n              <Button type=\"primary\" disabled>\n                Primary(disabled)\n              </Button>\n              <br />\n              <Button>Default</Button>\n              <Button disabled>Default(disabled)</Button>\n              <br />\n              <Button type=\"dashed\">Dashed</Button>\n              <Button type=\"dashed\" disabled>\n                Dashed(disabled)\n              </Button>\n              <br />\n              <Button type=\"link\">Link</Button>\n              <Button type=\"link\" disabled>\n                Link(disabled)\n              </Button>\n              <br />\n              <Button type=\"link\" danger>\n                Danger Link\n              </Button>\n              <Button type=\"link\" danger disabled>\n                Danger Link(disabled)\n              </Button>\n              <br />\n              <Button danger>Danger Default</Button>\n              <Button danger disabled>\n                Danger Default(disabled)\n              </Button>\n              <div className=\"site-button-ghost-wrapper\">\n                <Button ghost>Ghost</Button>\n                <Button ghost disabled>\n                  Ghost(disabled)\n                </Button>\n              </div>\n            </Card>\n\n            <Card title=\"多个按钮组合\">\n              <p>\n                按钮组合使用时，推荐使用 1 个主操作 + n 个次操作，3 个以上操作时把更多操作放到 Dropdown.Button\n                中组合使用。\n              </p>\n              <Button type=\"primary\">primary</Button>\n              <Button>secondary</Button>\n              <Dropdown overlay={menu}>\n                <Button>\n                  Actions <DownOutlined />\n                </Button>\n              </Dropdown>\n            </Card>\n\n            <Card title=\"危险按钮\">\n              <p>在 4.0 之后，危险成为一种按钮属性而不是按钮类型。</p>\n              <Button type=\"primary\" danger>\n                Primary\n              </Button>\n              <Button danger>Default</Button>\n              <Button type=\"dashed\" danger>\n                link\n              </Button>\n              <Button type=\"link\" danger>\n                link\n              </Button>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}